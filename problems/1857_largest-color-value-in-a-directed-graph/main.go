package main

import (
	"fmt"
	"math"
	"testing"
)

func largestPathValue(colors string, edges [][]int) int {
	n := len(colors)
	adjMap := make([][]int, len(colors))
	for _, edge := range edges {
		if edge[0] == edge[1] {
			return -1
		}
		adjMap[edge[0]] = append(adjMap[edge[0]], edge[1])
	}
	ret := math.MinInt
	visited := make([]bool, n)
	pathVisited := make([]bool, n)
	dp := make([][]int, n)
	for i := 0; i < n; i++ {
		dp[i] = make([]int, 26)
	}
	for i := 0; i < len(colors); i++ {
		dfs(i, colors, adjMap, visited, pathVisited, dp, &ret)
	}
	return ret
}

func dfs(curr int, colors string, adjMap [][]int, visited, pathVisited []bool, dp [][]int, ret *int) {
	if pathVisited[curr] || *ret == -1 {
		*ret = -1
		return
	}
	if visited[curr] {
		return
	}
	visited[curr] = true
	pathVisited[curr] = true
	for _, next := range adjMap[curr] {
		dfs(next, colors, adjMap, visited, pathVisited, dp, ret)
		if *ret == -1 {
			return
		}
		for i := 0; i < 26; i++ {
			if dp[next][i] > dp[curr][i] {
				dp[curr][i] = dp[next][i]
			}
		}
	}
	dp[curr][colors[curr]-'a']++
	if dp[curr][colors[curr]-'a'] > *ret {
		*ret = dp[curr][colors[curr]-'a']
	}
	pathVisited[curr] = false
}

func Test1857(t *testing.T) {
	fmt.Println(largestPathValue("abaca", [][]int{
		{0, 1}, {0, 2}, {2, 3}, {3, 4},
	}))
	fmt.Println(largestPathValue("a", [][]int{
		{0, 0},
	}))
	fmt.Println(largestPathValue("aa", [][]int{
		{0, 1}, {1, 0},
	}))
	fmt.Println(largestPathValue("hhqhuqhqff", [][]int{
		{0, 1}, {0, 2}, {2, 3}, {3, 4}, {3, 5}, {5, 6}, {2, 7}, {6, 7}, {7, 8}, {3, 8}, {5, 8}, {8, 9}, {3, 9}, {6, 9}}))
	fmt.Println(largestPathValue("zaazazwlqqwaazlalwqaaqllzzzwzqlazqaazqlaqlllzqzzalqzwalwlzwzqwzqzaqzwllzlqwlqwwqawqzlqzallwlqaqq",
		[][]int{{0, 1}, {0, 2}, {1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {6, 8}, {7, 9}, {8, 9}, {4, 9}, {8, 10}, {9, 10}, {5, 10}, {6, 11}, {10, 11}, {11, 12}, {12, 13}, {9, 13}, {10, 13}, {13, 14}, {10, 14}, {13, 15}, {9, 15}, {14, 15}, {15, 16}, {11, 16}, {12, 17}, {16, 17}, {17, 18}, {8, 18}, {15, 18}, {14, 18}, {10, 19}, {17, 19}, {18, 19}, {18, 20}, {17, 21}, {15, 21}, {18, 21}, {21, 22}, {20, 22}, {17, 23}, {21, 23}, {20, 23}, {22, 23}, {19, 24}, {22, 24}, {24, 25}, {23, 25}, {20, 25}, {22, 26}, {16, 27}, {18, 27}, {22, 28}, {27, 29}, {18, 29}, {20, 29}, {10, 29}, {29, 30}, {28, 30}, {28, 31}, {29, 32}, {17, 32}, {30, 32}, {27, 33}, {31, 34}, {34, 35}, {35, 36}, {27, 36}, {31, 37}, {36, 37}, {35, 38}, {38, 39}, {32, 39}, {39, 40}, {40, 41}, {33, 41}, {39, 41}, {36, 41}, {26, 42}, {39, 42}, {34, 42}, {29, 42}, {36, 42}, {41, 43}, {42, 43}, {37, 43}, {42, 44}, {40, 44}, {43, 44}, {23, 44}, {29, 45}, {35, 46}, {28, 46}, {44, 46}, {41, 47}, {44, 47}, {45, 47}, {42, 48}, {44, 49}, {39, 49}, {37, 49}, {45, 49}, {32, 49}, {46, 50}, {47, 50}, {36, 50}, {48, 50}, {49, 50}, {46, 51}, {50, 51}, {50, 52}, {37, 52}, {31, 53}, {37, 54}, {49, 54}, {52, 54}, {40, 55}, {52, 55}, {41, 55}, {54, 55}, {45, 56}, {53, 56}, {55, 57}, {54, 57}, {50, 57}, {47, 57}, {31, 58}, {56, 58}, {56, 59}, {59, 60}, {52, 60}, {50, 60}, {58, 60}, {52, 61}, {50, 61}, {58, 61}, {56, 61}, {61, 62}, {54, 63}, {34, 63}, {28, 64}, {11, 64}, {61, 64}, {52, 64}, {41, 64}, {36, 65}, {33, 65}, {62, 65}, {52, 65}, {65, 66}, {61, 67}, {65, 67}, {59, 67}, {60, 67}, {67, 68}, {66, 68}, {56, 68}, {64, 68}, {65, 69}, {64, 69}, {65, 70}, {70, 71}, {42, 71}, {52, 72}, {53, 72}, {55, 72}, {70, 73}, {65, 74}, {68, 74}, {73, 74}, {72, 74}, {15, 74}, {60, 75}, {69, 75}, {73, 75}, {70, 75}, {72, 76}, {54, 76}, {53, 76}, {74, 76}, {68, 77}, {75, 77}, {71, 77}, {76, 77}, {69, 77}, {72, 78}, {55, 78}, {76, 78}, {60, 78}, {77, 78}, {69, 79}, {74, 79}, {75, 79}, {77, 79}, {78, 80}, {52, 81}, {74, 81}, {78, 81}, {47, 82}, {79, 82}, {81, 82}, {66, 82}, {78, 83}, {81, 83}, {75, 84}, {80, 84}, {38, 84}, {77, 84}, {75, 85}, {80, 85}, {59, 85}, {78, 86}, {84, 86}, {68, 86}, {86, 87}, {85, 87}, {57, 88}, {86, 88}, {77, 88}, {62, 88}, {36, 89}, {89, 90}, {88, 90}, {85, 91}, {88, 91}, {89, 91}, {91, 92}, {82, 92}, {76, 92}, {86, 92}, {71, 92}, {91, 93}, {69, 93}, {82, 93}, {86, 94}, {39, 94}, {83, 94}, {87, 94}, {76, 95}, {94, 95}, {67, 95}}))
	fmt.Println(largestPathValue("qddqqqddqqdqddddddqdqqddddqdqdqqdddqddqdqqdqqqqqddqddqqddqqqdqqqqdqdddddqdq",
		[][]int{{0, 1}, {1, 2}, {2, 3}, {3, 4}, {3, 5}, {4, 5}, {3, 6}, {5, 6}, {6, 7}, {5, 7}, {3, 7}, {6, 8}, {5, 8}, {4, 8}, {8, 9}, {9, 10}, {10, 11}, {9, 11}, {9, 12}, {11, 12}, {6, 12}, {11, 13}, {9, 13}, {13, 14}, {12, 14}, {10, 14}, {11, 14}, {13, 15}, {14, 15}, {12, 16}, {9, 16}, {7, 16}, {15, 17}, {13, 17}, {17, 18}, {11, 18}, {17, 19}, {18, 19}, {13, 19}, {17, 20}, {18, 20}, {19, 21}, {17, 21}, {12, 22}, {21, 22}, {16, 22}, {22, 23}, {21, 23}, {16, 24}, {22, 24}, {15, 25}, {24, 25}, {20, 25}, {12, 25}, {23, 26}, {26, 27}, {13, 27}, {27, 28}, {21, 28}, {26, 28}, {28, 29}, {15, 30}, {27, 30}, {24, 30}, {21, 30}, {27, 31}, {30, 31}, {25, 32}, {29, 32}, {17, 33}, {31, 33}, {32, 33}, {25, 34}, {33, 35}, {31, 35}, {34, 35}, {30, 36}, {35, 37}, {36, 37}, {26, 38}, {36, 38}, {34, 38}, {37, 38}, {38, 39}, {22, 39}, {39, 40}, {40, 41}, {38, 41}, {20, 41}, {41, 42}, {37, 42}, {40, 43}, {42, 43}, {43, 44}, {41, 44}, {32, 44}, {38, 44}, {39, 44}, {43, 45}, {44, 45}, {44, 46}, {45, 46}, {45, 47}, {42, 47}, {43, 48}, {45, 49}, {45, 50}, {48, 51}, {30, 51}, {46, 52}, {48, 52}, {38, 52}, {51, 52}, {47, 53}, {45, 53}, {53, 54}, {48, 54}, {30, 54}, {50, 55}, {30, 55}, {36, 55}, {55, 56}, {39, 56}, {54, 56}, {50, 57}, {56, 58}, {32, 58}, {57, 59}, {49, 59}, {38, 60}, {60, 61}, {35, 61}, {54, 61}, {53, 61}, {54, 62}, {58, 62}, {62, 63}, {40, 63}, {58, 63}, {49, 64}, {63, 64}, {47, 64}, {39, 64}, {45, 64}, {62, 65}, {64, 65}, {54, 65}, {52, 66}, {61, 66}, {60, 66}, {55, 67}, {65, 67}, {45, 68}, {56, 68}, {36, 68}, {67, 69}, {66, 69}, {27, 70}, {60, 70}, {67, 70}, {48, 71}, {70, 71}, {53, 71}, {62, 72}, {72, 73}, {73, 74}}))
	t.Error()
}
